name: Multi-Platform Build and Release Workflow

on:
  workflow_dispatch:

jobs:
  get-latest-tag:
    name: Get Latest Git Tag
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "tag=$TAG" >> $GITHUB_ENV
          echo "::set-output name=tag::${TAG}"

  ios-macos-build:
    name: Trigger iOS and macOS Build on Codemagic
    runs-on: ubuntu-latest
    needs: get-latest-tag

    steps:
      - name: Trigger Codemagic Build
        id: trigger_build
        run: |
          RESPONSE=$(curl -X POST \
          -H "Content-Type: application/json" \
          -H "x-auth-token: ${{ secrets.CODEMAGIC_TOKEN }}" \
          -d '{
            "appId": "your-codemagic-app-id",
            "workflowId": "your-codemagic-workflow-id",
            "branch": "main",
            "environment": {
              "TAG_NAME": "${{ needs.get-latest-tag.outputs.tag_name }}"
            }
          }' \
          https://api.codemagic.io/builds)

          echo $RESPONSE
          BUILD_ID=$(echo $RESPONSE | jq -r '.buildId')
          echo "::set-output name=build_id::$BUILD_ID"

  fetch-codemagic-artifacts:
    name: Fetch Codemagic Artifacts
    runs-on: ubuntu-latest
    needs: ios-macos-build
    steps:
      - name: Download Codemagic Artifacts
        run: |
          ARTIFACTS_URL="https://api.codemagic.io/artifacts?buildId=${{ needs.ios-macos-build.outputs.build_id }}"
          curl -X GET \
          -H "x-auth-token: ${{ secrets.CODEMAGIC_TOKEN }}" \
          $ARTIFACTS_URL -o codemagic-artifacts.zip

      - name: Extract Codemagic Artifacts
        run: |
          unzip codemagic-artifacts.zip -d codemagic-artifacts

      - name: Upload Codemagic Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Codemagic-Artifacts
          path: codemagic-artifacts/

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [fetch-codemagic-artifacts]
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.get-latest-tag.outputs.tag_name }}
          release_name: "Release ${{ needs.get-latest-tag.outputs.tag_name }}"
          body: |
            ## Release Notes
            - Windows Installer
            - Linux AppImage
            - Android APK
            - iOS/macOS Builds
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/
          asset_name: OpenOTP-Multi-Platform-Build.zip
          asset_content_type: application/zip