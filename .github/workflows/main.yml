name: Multi-Platform Build and Release Workflow

on:
  workflow_dispatch:

jobs:
  get-latest-tag:
    name: Get Latest and Previous Git Tags
    runs-on: ubuntu-latest
    outputs:
      latest_tag: ${{ steps.tags.outputs.latest_tag }}
      previous_tag: ${{ steps.tags.outputs.previous_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine tags
        id: tags
        run: |
          git fetch --tags
          # sort tags by semantic version, descending
          IFS=$'\n' read -d '' -r -a TAGS < <(git tag --sort=-version:refname)
          echo "latest_tag=${TAGS[0]}" >> "$GITHUB_OUTPUT"
          echo "previous_tag=${TAGS[1]}" >> "$GITHUB_OUTPUT"

  # … your windows-build, linux-build, android-build, ios-build + fetch-codemagic-artifacts jobs …

  create-release:
    needs:
      - windows-build
      - linux-build
      - android-build
      - fetch-codemagic-artifacts
      - get-latest-tag
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows Installer  
        uses: actions/download-artifact@v4
        with:
          name: OpenOTP-Windows-Installer

      - name: Download Linux AppImage  
        uses: actions/download-artifact@v4
        with:
          name: OpenOTP-Linux-AppImage

      - name: Download Android APK  
        uses: actions/download-artifact@v4
        with:
          name: OpenOTP-Android-APK

      - name: Rename APK
        run: mv app-release.apk OpenOTP.apk

      - name: Download iOS IPA  
        uses: actions/download-artifact@v4
        with:
          name: OpenOTP-iOS-IPA

      - name: Generate release body
        id: release_body
        run: |
          # Start with the changelog link
          echo "**Full Changelog**: https://github.com/Slipstreamm/OpenOTP/compare/${{ needs.get-latest-tag.outputs.previous_tag }}...${{ needs.get-latest-tag.outputs.latest_tag }}" > release_body.md
          echo "" >> release_body.md
          echo "## SHA256 Hashes" >> release_body.md

          # Compute and append the SHA256 for each artifact
          for file in OpenOTPInstaller.exe OpenOTP.AppImage OpenOTP.apk OpenOTP.ipa; do
            HASH=$(sha256sum "$file" | awk '{print $1}')
            echo "- $file: \`$HASH\`" >> release_body.md
          done

      - name: Create/Update GitHub Release and Upload Assets
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.get-latest-tag.outputs.latest_tag }}
          artifacts: |
            OpenOTPInstaller.exe
            OpenOTP.AppImage
            OpenOTP.apk
            OpenOTP.ipa
          bodyFile: release_body.md
          allowUpdates: true            # update if the tag already exists :contentReference[oaicite:0]{index=0}
          makeLatest: true              # force this release to be marked “latest” :contentReference[oaicite:1]{index=1}
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
